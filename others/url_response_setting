for better performance in developement use storage as local and in production use it as amazon
for local url_for(attachment)
for prod attachment.url
suppose in user model
has_many_attached :images


another way 
  def medias
    object.medias.map do |media|
      if Rails.env.development? || Rails.env.test?
        "#{base_url}#{Rails.application.routes.url_helpers.rails_blob_path(media, only_path: true)}"
      else
        media.service.send(:object_for, media.key).public_url
      end
    end
  end

  private

  def base_url
    ENV['BASE_URL'] || 'http://localhost:3000'
  end

====================================================================================================

in controller

url_response = get_image_url(@user.images)
render json: { data: @user.attributes.merge(images: url_response) }, status: :created 

in private
private

def get_image_url(attachements)
  return nil if attachements.nil? 
  files = []
  attachements.each do |attachment|
    files << {
    url: attachment.url or attachment.service_url both are same    else if u use url_for(attachment) then it will give url of the localhost
    name: url.filename,
    type: url.content_type
      }
  end
files
end

mostly this url: attachment.url is too long 
if you wanted to make it shorter then
test_url = attachement.url.split("?", 2)
final_url = test_url.first
  { url: final_url}

लेकिन Rails 7.1+ में इसे हटा दिया गया है, जिससे यह undefined method error देगा।... service_url method will not work.
